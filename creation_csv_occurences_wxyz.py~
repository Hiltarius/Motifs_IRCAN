#@author guillamaury debras
#creation d'un csv a partir de fichiers output de l'outil k_seek_4_2.pl
#recuperation du top 10 ,stockage des motifs et occurences, taille et rang
#effectuer un nouveau top 100 en donnant du poids a chaque facteur selon la foem y = a*x + b*z + c*w + d * v
#recherche de memes motifs dans le jeu commun selectionne ( sinon impossible #de clusteriser des motifs present dans un fichier mais pas dans les autres )


import os
from itertools import islice
import sys
import re

path = os.getcwd()
for input_file in os.listdir(path):
    if input_file.endswith(".total"):
        dico={}
        with open(input_file) as f :
            for line in f:
                data = line.split()
                dico[data[0]]=int(data[1])


        small_filename = 'total_sort_{}.txt'.format(input_file)

        #file = open(small_filename,'w')

        motifliste=[]
        lenmotif=[]
        internrepet=[]
        occurences=[]
        ranking=[]
        newrankvalue=[]
        for key, value in sorted(dico.iteritems(), key=lambda x: int(x[1]),reverse=True):
            occurences.append(value)
            motifliste.append(key)
        lenm = len(motifliste)
        cpt=1
        for i in range(lenm):
            
            ranking.append(cpt)
            cpt+=1
            #file.write( "%s    %s\n" % (key, value))
            
        #file.close()

  
        with open(small_filename,"r") as myfile:
            head=list(islice(myfile,100))
      
        top50_file = 'top50_sort_{}.txt'.format(input_file)

        with open(top50_file,"w") as f2 :
            for item in head:
                f2.write(item)

        os.remove(small_filename)
